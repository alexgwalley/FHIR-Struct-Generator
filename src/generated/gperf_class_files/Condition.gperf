%language=C++
%compare-strncmp
%readonly-tables
%define lookup-function-name Condition_MemberLookup
%enum
%define word-array-name word_array_Condition
%define class-name Condition_Gperf
struct fhir_deserialize::MemberNameAndOffset;
%%
resourceType, 0x0, 0, -1, {(U8*)"resourceType", 12}, fhir_deserialize::ResourceType::Unknown, 0, fhir_deserialize::ResourceType::Unknown
id, 0x8, 1, -1, {(U8*)"id", 2}, fhir_deserialize::ResourceType::Unknown, 0, fhir_deserialize::ResourceType::Unknown
meta, 0x18, 2, -1, {(U8*)"meta", 4}, fhir_deserialize::ResourceType::Meta, 0, fhir_deserialize::ResourceType::Unknown
implicitRules, 0x20, 3, -1, {(U8*)"implicitRules", 13}, fhir_deserialize::ResourceType::Unknown, 0, fhir_deserialize::ResourceType::Unknown
language, 0x30, 4, -1, {(U8*)"language", 8}, fhir_deserialize::ResourceType::Unknown, 0, fhir_deserialize::ResourceType::Unknown
text, 0x40, 5, -1, {(U8*)"text", 4}, fhir_deserialize::ResourceType::Narrative, 0, fhir_deserialize::ResourceType::Unknown
contained_count, 0x48, 6, -1, {(U8*)"contained_count", 15}, fhir_deserialize::ResourceType::Unknown, 0, fhir_deserialize::ResourceType::Unknown
contained, 0x50, 7, -1, {(U8*)"contained", 9}, fhir_deserialize::ResourceType::Resource, 0, fhir_deserialize::ResourceType::Unknown
extension_count, 0x58, 8, -1, {(U8*)"extension_count", 15}, fhir_deserialize::ResourceType::Unknown, 0, fhir_deserialize::ResourceType::Unknown
extension, 0x60, 9, -1, {(U8*)"extension", 9}, fhir_deserialize::ResourceType::Extension, 0, fhir_deserialize::ResourceType::Unknown
modifierExtension_count, 0x68, 10, -1, {(U8*)"modifierExtension_count", 23}, fhir_deserialize::ResourceType::Unknown, 0, fhir_deserialize::ResourceType::Unknown
modifierExtension, 0x70, 11, -1, {(U8*)"modifierExtension", 17}, fhir_deserialize::ResourceType::Extension, 0, fhir_deserialize::ResourceType::Unknown
identifier_count, 0x78, 12, -1, {(U8*)"identifier_count", 16}, fhir_deserialize::ResourceType::Unknown, 0, fhir_deserialize::ResourceType::Unknown
identifier, 0x80, 13, -1, {(U8*)"identifier", 10}, fhir_deserialize::ResourceType::Identifier, 0, fhir_deserialize::ResourceType::Unknown
clinicalStatus, 0x88, 14, -1, {(U8*)"clinicalStatus", 14}, fhir_deserialize::ResourceType::CodeableConcept, 0, fhir_deserialize::ResourceType::Unknown
verificationStatus, 0x90, 15, -1, {(U8*)"verificationStatus", 18}, fhir_deserialize::ResourceType::CodeableConcept, 0, fhir_deserialize::ResourceType::Unknown
category_count, 0x98, 16, -1, {(U8*)"category_count", 14}, fhir_deserialize::ResourceType::Unknown, 0, fhir_deserialize::ResourceType::Unknown
category, 0xa0, 17, -1, {(U8*)"category", 8}, fhir_deserialize::ResourceType::CodeableConcept, 0, fhir_deserialize::ResourceType::Unknown
severity, 0xa8, 18, -1, {(U8*)"severity", 8}, fhir_deserialize::ResourceType::CodeableConcept, 0, fhir_deserialize::ResourceType::Unknown
code, 0xb0, 19, -1, {(U8*)"code", 4}, fhir_deserialize::ResourceType::CodeableConcept, 0, fhir_deserialize::ResourceType::Unknown
bodySite_count, 0xb8, 20, -1, {(U8*)"bodySite_count", 14}, fhir_deserialize::ResourceType::Unknown, 0, fhir_deserialize::ResourceType::Unknown
bodySite, 0xc0, 21, -1, {(U8*)"bodySite", 8}, fhir_deserialize::ResourceType::CodeableConcept, 0, fhir_deserialize::ResourceType::Unknown
subject, 0xc8, 22, -1, {(U8*)"subject", 7}, fhir_deserialize::ResourceType::Reference, 0, fhir_deserialize::ResourceType::Unknown
encounter, 0xd0, 23, -1, {(U8*)"encounter", 9}, fhir_deserialize::ResourceType::Reference, 0, fhir_deserialize::ResourceType::Unknown
onsetDateTime, 0xe0, 25, 0, {(U8*)"onset", 5}, fhir_deserialize::ResourceType::Unknown, 17, fhir_deserialize::ResourceType::Unknown
onsetAge, 0xe0, 25, 1, {(U8*)"onset", 5}, fhir_deserialize::ResourceType::Unknown, 20, fhir_deserialize::ResourceType::Age
onsetPeriod, 0xe0, 25, 2, {(U8*)"onset", 5}, fhir_deserialize::ResourceType::Unknown, 20, fhir_deserialize::ResourceType::Period
onsetRange, 0xe0, 25, 3, {(U8*)"onset", 5}, fhir_deserialize::ResourceType::Unknown, 20, fhir_deserialize::ResourceType::Range
onsetString, 0xe0, 25, 4, {(U8*)"onset", 5}, fhir_deserialize::ResourceType::Unknown, 7, fhir_deserialize::ResourceType::Unknown
abatementDateTime, 0xf8, 27, 0, {(U8*)"abatement", 9}, fhir_deserialize::ResourceType::Unknown, 17, fhir_deserialize::ResourceType::Unknown
abatementAge, 0xf8, 27, 1, {(U8*)"abatement", 9}, fhir_deserialize::ResourceType::Unknown, 20, fhir_deserialize::ResourceType::Age
abatementPeriod, 0xf8, 27, 2, {(U8*)"abatement", 9}, fhir_deserialize::ResourceType::Unknown, 20, fhir_deserialize::ResourceType::Period
abatementRange, 0xf8, 27, 3, {(U8*)"abatement", 9}, fhir_deserialize::ResourceType::Unknown, 20, fhir_deserialize::ResourceType::Range
abatementString, 0xf8, 27, 4, {(U8*)"abatement", 9}, fhir_deserialize::ResourceType::Unknown, 7, fhir_deserialize::ResourceType::Unknown
recordedDate, 0x108, 28, -1, {(U8*)"recordedDate", 12}, fhir_deserialize::ResourceType::Unknown, 0, fhir_deserialize::ResourceType::Unknown
recorder, 0x118, 29, -1, {(U8*)"recorder", 8}, fhir_deserialize::ResourceType::Reference, 0, fhir_deserialize::ResourceType::Unknown
asserter, 0x120, 30, -1, {(U8*)"asserter", 8}, fhir_deserialize::ResourceType::Reference, 0, fhir_deserialize::ResourceType::Unknown
stage_count, 0x128, 31, -1, {(U8*)"stage_count", 11}, fhir_deserialize::ResourceType::Unknown, 0, fhir_deserialize::ResourceType::Unknown
stage, 0x130, 32, -1, {(U8*)"stage", 5}, fhir_deserialize::ResourceType::Condition_Stage, 0, fhir_deserialize::ResourceType::Unknown
evidence_count, 0x138, 33, -1, {(U8*)"evidence_count", 14}, fhir_deserialize::ResourceType::Unknown, 0, fhir_deserialize::ResourceType::Unknown
evidence, 0x140, 34, -1, {(U8*)"evidence", 8}, fhir_deserialize::ResourceType::Condition_Evidence, 0, fhir_deserialize::ResourceType::Unknown
note_count, 0x148, 35, -1, {(U8*)"note_count", 10}, fhir_deserialize::ResourceType::Unknown, 0, fhir_deserialize::ResourceType::Unknown
note, 0x150, 36, -1, {(U8*)"note", 4}, fhir_deserialize::ResourceType::Annotation, 0, fhir_deserialize::ResourceType::Unknown
